// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Wit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  image     String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  replies   Reply[]
  likes     WitLikes[]
}

model WitLikes {
  user    User @relation(fields: [userId], references: [id])
  userId  Int
  wit     Wit @relation(fields: [witId], references: [id])
  witId   Int

  @@id([userId, witId])
}


model Reply {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  wit       Wit      @relation(fields: [witId], references: [id])
  witId     Int  
  likes     ReplyLikes[]
}

model ReplyLikes {
  user    User @relation(fields: [userId], references: [id])
  userId  Int
  reply   Reply @relation(fields: [replyId], references: [id])
  replyId   Int

  @@id([userId, replyId])
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  picture     String?
  password    String
  wits        Wit[]
  witLikes    WitLikes[]
  replies     Reply[]
  replyLikes  ReplyLikes[]
  followedBy  Follows[] @relation("follower")
  following   Follows[] @relation("following")
}

model Follows {
  follower    User @relation("follower", fields: [followerId], references: [id])
  followerId  Int
  following   User @relation("following", fields: [followingId], references: [id])
  followingId Int

  @@id([followerId, followingId])
}
